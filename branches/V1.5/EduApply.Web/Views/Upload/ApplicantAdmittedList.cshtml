@model EduApply.Web.Models.AdmittedListModel

@{
    ViewBag.Title = "Admitted List For Applicant";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    int successfulUploads = TempData["successfulUploads"] == null ? 0 : Convert.ToInt32(TempData["successfulUploads"]);
    int failedUploads = TempData["failedUploads"] == null ? 0 : Convert.ToInt32(TempData["failedUploads"]);
    int updatedUploads = TempData["updatedUploads"] == null ? 0 : Convert.ToInt32(TempData["updatedUploads"]);
}

@*<h2>Admitted List For Applicant</h2>*@

@using (Html.BeginForm("ApplicantAdmittedList", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <h4 style="color: red">Note: Only csv files are accepted for upload, click @Html.ActionLink("here", "DownloadPreFormatedDoc", "Upload", new { fileName = "ApplicantAdmittedList.csv" }, null) to get a preformatted document</h4>
    <hr />       <div class="form-group required">
        <div class="row">

            <div class="col-md-6">
                @Html.LabelFor(model => model.ApplicationFormId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ApplicationFormId, new SelectList(Model.ApplicationForms, "Id", "Name", Model.ApplicationFormId), "<--Select-->", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationFormId)
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.ProgramId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ProgramId, new SelectList(Model.Programs, "Id", "Code", Model.ProgramId), "<--Select-->", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProgramId)
            </div>
        </div>
    </div>
    <div class="form-group required">
        <div class="row">

            <div class="col-md-6">
                @Html.LabelFor(model => model.CourseOfStudyId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CourseOfStudyId, new SelectList(Model.Courses, "Id", "Name", Model.CourseOfStudyId), "<--Select-->", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseOfStudyId)
            </div>
            <div class="col-md-6">
                <label class="control-label">Select File</label>
                <input type="file" id="admittedList" name="admittedList" value="" class="form-control" data-val="true" data-val-required="Select File" />
                @Html.ValidationMessage("admittedList", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*<div class="form-group required">
            @Html.LabelFor(model => model.NameOfFile, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameOfFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameOfFile)
            </div>
        </div>*@
    <div class="form-group">
        <div class="row">

            <div class="col-md-12">
                <input type="submit" id="UploadList" value="Upload CSV" class="btn btn-primary" />
                <a href="#" id="downloadButton" class="btn btn-success">Download</a>
            </div>
        </div>
    </div>


    if (successfulUploads > 0 && failedUploads == 0 && updatedUploads == 0)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-success alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <p>All records in file successfully uploaded</p>
                </div>
            </div>
        </div>



    }
    else if (updatedUploads > 0 && successfulUploads == 0 && failedUploads == 0)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-info alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <p>@updatedUploads records succesfully updated</p>
                </div>
            </div>
        </div>


    }
    else if (failedUploads > 0 && successfulUploads == 0 && updatedUploads == 0)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-danger alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <p>No record uploaded</p>
                </div>
            </div>
        </div>




    }
    else if (failedUploads != 0 || successfulUploads != 0 || updatedUploads != 0)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-info alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <p>New records added: @successfulUploads, Updated Records:@updatedUploads, Failed : @failedUploads</p>
                </div>
            </div>
        </div>



    }
    <div class="row">
        <div class="col-md-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger alert alert-danger alert-dismissible" })
        </div>
    </div>

    <div class="row">
        <div class="form-group">
            <div class="col-md-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">Admission List for Application Form</div>
                    <div id="applicantAdmList"></div>
                </div>
            </div>
        </div>
    </div>

}

<script>
    $(function () {
        //used to style popup
        toastr.options =
   {
       "closeButton": false,
       "debug": false,
       "progressBar": false,
       "positionClass": "toast-top-center",
       "onclick": null,
       "showDuration": "300",
       "hideDuration": "1000",
       "timeOut": "5000",
       "extendedTimeOut": "1000",
       "showEasing": "swing",
       "hideEasing": "linear",
       "showMethod": "fadeIn",
       "hideMethod": "fadeOut"
   };

        var appFormId = $("#ApplicationFormId").val();
        var programId = $("#ProgramId").val();
        var courseId = $("#CourseOfStudyId").val();
        getAdmittedList(appFormId, programId, courseId);

        $("#ApplicationFormId").change(function () {
            appFormId = $(this).val();
            programId = $("#ProgramId").val();
            courseId = $("#CourseOfStudyId").val();
            getAdmittedList(appFormId, programId, courseId);
        });

        $("#CourseOfStudyId").change(function () {
            programId = $("#ProgramId").val();
            courseId = $("#CourseOfStudyId").val();
            appFormId = $("#ApplicationFormId").val();
            getAdmittedList(appFormId, programId, courseId);
        });

        $("#ProgramId").change(function () {
            var selectedItem = $(this).val();
            var ddlCourses = $("#CourseOfStudyId");
            // var statesProgress = $("#states-loading-progress");
            //statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetCoursesByProgramId"))",
                data: { "programId": selectedItem },
                success: function (data) {
                    ddlCourses.html('');
                    ddlCourses.append($('<option></option>').val(null).html('---'));
                    $.each(data, function (id, option) {
                        ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                    // statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve courses.');
                    //   statesProgress.hide();
                }
            });
            programId = $("#ProgramId").val();
            courseId = $("#CourseOfStudyId").val();
            appFormId = $("#ApplicationFormId").val();
            getAdmittedList(appFormId, programId, courseId);
        });

        //$("#UploadList").click(function () {
        //    var response;
        //    var nameOfFile = $("#NameOfFile").val();
        //    checkIfNameExist();
        //    if (response) {
        //        toastr.error("Name entered for uploaded file already exist, Please enter another name");
        //        return false;
        //    }

        //    function checkIfNameExist() {
        //        $.ajax({
        //            cache: false,
        //            type: "GET",
        //            async: false,
        //            // url: "/Upload/CheckForDuplicateName",
        //            url: "/EduApply/Upload/CheckForDuplicateName",
        //            data: { "nameOfFile": nameOfFile },
        //            success: function (data) {
        //                response = data;
        //            },
        //            error: function (xhr, ajaxOptions, thrownError) {
        //                alert('Error occured');
        //                return false;
        //            }
        //        });
        //    }
        //});

        $("#downloadButton").click(function () {
            var appNums = [];
            $("#AdmissionListTable tr:gt(0)").each(function () {
                var row = $(this);
                var applicationNumber = $.trim(row.find('td:eq(1)').html());
                if (applicationNumber != "") {
                    appNums.push(applicationNumber);
                }

            });
            if (appNums.length == 0) {
                toastr.info("No record to download");
                return false;
            }
            downloadAdmittedList(appNums);
        });

        function downloadAdmittedList(appNums) {

            $.ajax({
                cache: false,
                type: "POST",
                //before passing an array to a controller from ajax traditional must be set to true or else controller wont recieve the array
                traditional: true,
            //   url: "/Download/CreateExcelForAdmissionList",
                  url: "/EduApply/Download/CreateExcelForAdmissionList",
                data: { "appNums": appNums },
                success: function (filename) {
                  //  window.location = '/Download/DownloadExcel?file=' + filename;
                    window.location = '/EduApply/Download/DownloadExcel?file=' + filename;
                    //  toastr.success("Download Complete");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Error occured');
                    return false;
                }
            });
        }
    });

    function getAdmittedList(appFormId, programId, courseId) {
        var admissionListTable = $("#AdmissionListTable");
        $.ajax({
            cache: false,
            type: "GET",
           // url: "/Upload/GetAdmittedList",
             url: "/EduApply/Upload/GetAdmittedList",
            data: { "applicationFormId": appFormId, "programId": programId, "courseId": courseId },
            success: function (data) {
                $("#applicantAdmList").html('<table class="table table-striped" id="AdmissionListTable"><thead><tr><th>S/N</th><th>AppNum</th><th>RegNum</th><th>LastName</th><th>FirstName</th><th>MiddleName</th><th>Program</th><th>Course</th><th>Gender</th><th>PhoneNumber</th></tr></thead><tbody id="admittedListTableBody"></tbody></table>');
                var admittedListTableBody = $("#admittedListTableBody");
                var counter = 0;
                if (data.length > 0) {
                    admittedListTableBody.html('');
                    $.each(data, function (id, option) {
                        counter++;
                        admittedListTableBody.append($('<tr id=' + counter + '></tr>').html(
                            '<td>' + counter + '</td>' +
                            '<td>' + option.appNum + '</td>' +
                            '<td>' + option.regNum + '</td>' +
                            '<td>' + option.lastName + '</td>' +
                            '<td>' + option.firstName + '</td>' +
                            '<td>' + option.middleName + '</td>' +
                          '<td>' + option.program + '</td>' +
                             '<td>' + option.course + '</td>' +
                               '<td>' + option.gender + '</td>' +
                            '<td>' + option.phoneNumber + '</td>'
                        ));
                    });

                    if ($.fn.dataTable.isDataTable('#AdmissionListTable')) {
                        $('#AdmissionListTable').DataTable({
                            destroy: true

                        });
                    }
                    else {
                        $('#AdmissionListTable').DataTable();
                    }
                } else {
                    admittedListTableBody.html('<tr><td colspan="10" style="text-align: center">No records found</td></tr>');
                }

                // statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve Admission List.');
                //   statesProgress.hide();
            }
        });
    }
</script>