@model EduApply.Web.Models.SessionModel

@{
    ViewBag.Title = "Session Configuration";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@*<h2>Session Configuration</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">

        <aside class="col-md-12">
            <ul class="nav nav-tabs">
                <li class="active">@Html.ActionLink("Session", "Index", "Session")</li>
                <li>@Html.ActionLink("Program", "Index", "Program")</li>
                <li>@Html.ActionLink("Faculty", "Index", "Faculty")</li>
                <li>@Html.ActionLink("Department", "Index", "Department")</li>
                <li>@Html.ActionLink("Course of Study", "Index", "Course")</li>
                <li>@Html.ActionLink("Venue", "Index", "Venue")</li>
                <li>@Html.ActionLink("Exam Venue", "Index", "ExamVenue")</li>
                <li>@Html.ActionLink("Venue Mapping", "Mapper", "VenueMapping")</li>
            </ul>
        </aside>

        <article class="col-md-12 margin-top">
            <div class="form-horizontal">
                <h4>Edit Session</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger alert alert-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group required">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control default-width" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.StartDate, Model.StartDate.ToString("dd-MMM-yyyy"), new { @class = "form-control custom-disable-textbox", @readonly = true })
                        @*<input type="text" value="@Convert.ToDateTime(Model.StartDate).ToString("d")" class="form-control" name="StartDate" id="StartDate" data-val="true" data-val-required="StartDate is required" />*@
                        @Html.ValidationMessage("StartDate", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.EndDate, Model.EndDate.ToString("dd-MMM-yyyy"), new { @class = "form-control custom-disable-textbox", @readonly = true })
                        @*<input type="text" value="@Convert.ToDateTime(Model.EndDate).ToString("d")" class="form-control" name="EndDate" id="EndDate" data-val="true" data-val-required="EndDate is required" />*@
                        @Html.ValidationMessage("EndDate", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" id="saveSessionButton" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        </article>


    </div>




}
<script>
    $(function () {
        $('#EndDate,#StartDate').datepicker({
            showOn: "button",
            buttonImage: "/EduApply/images/calendar.gif",
            //buttonImage: "/images/calendar.gif",
            buttonImageOnly: true,
            buttonText: "Select date",
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '1960:2060',
            defaultDate: 'Date.today()'

        });


        $('#saveSessionButton').click(function () {
            var sessionName = $("#Name").val();
            if (sessionName == "") {
                $("#Name").addClass("input-validation-error").removeClass("valid");
                return false;
            }
        });
        $("#Name").change(function () {
            var sessionName = $("#Name").val();
            if (sessionName == "") {
                $("#Name").addClass("input-validation-error").removeClass("valid");
            } else {
                $("#Name").addClass("valid").removeClass("input-validation-error");

            }
        });
    });
</script>
