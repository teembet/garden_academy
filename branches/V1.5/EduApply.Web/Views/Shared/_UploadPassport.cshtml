@using EduApply.Logic.Interfaces
@using EduApply.Logic.Service
@model EduApply.Web.Models.PictureModel

@using (Html.BeginForm("SavePassport", "Fill", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Upload Passport</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger alert alert-danger" })
        <p style="color: green"><strong>Acceptable Format: JPEG maximum size is 50KB</strong></p>
        <div class="form-group required">
            <label class="control-label col-md-2">Passport</label>
            <div class="col-md-6">
                <input type="file" id="picture" name="picture" class="form-control" data-val="true" data-val-required="No Picture uploaded" />
                @Html.ValidationMessage("picture", new { @class = "text-danger" })
                @if (!string.IsNullOrEmpty(Model.Name))
                {
                    <img src="~/images/StudentPassport/@Model.Name" alt="Applicant Passport" width="200" height="200" />
                }
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (User.IsInRole("Student"))
                {

                    var applicationFormId = Convert.ToInt32(Session["AppFormId"]);
                    var appFormservice = EngineContext.Resolve<IApplicationFormRepository>();
                    var applicationFormWorkFlow = appFormservice.GetFirstApplicationFormWorkFlow(applicationFormId);
                    var workFlow = appFormservice.GetWorkFlowItem(applicationFormWorkFlow.WorkFlowId);
                    var templatesForAppForm = appFormservice.GetFirstTemplatesInApp(applicationFormId);
                    var formTemplate = appFormservice.GetFormTemplate(templatesForAppForm.FormTemplateId);
                    if (!(workFlow.Name.Equals("Fill") && formTemplate.Code.Equals("PU")))
                    {
                        @Html.ActionLink("<< Back", "BackApplication", "Fill", null, new { @class = "btn btn-default" })
                    }
                    <input type="submit" value="Upload" class="btn btn-success" />
                    @Html.ActionLink("Continue >>", "ContinueFromPassport", "Fill", null, new { @class = "btn btn-primary" })

                }
                else
                {
                    @Html.ActionLink("<< Back", "BackApplication", "Fill", null, new { @class = "btn btn-default", @disabled = true })
                    <input type="submit" value="Upload" class="btn btn-success disabled" />
                    @Html.ActionLink("Continue >>", "ContinueFromPassport", "Fill", null, new { @class = "btn btn-primary", @disabled = true })
                }

            </div>
        </div>

        <div class="form-group custom-hide">
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    </div>
}