@using EduApply.Logic.Interfaces
@using EduApply.Logic.Service
@model EduApply.Web.Models.ApplicantProgramCourseCollection
@{
    int counter = 1;
    ViewBag.Title = "Program/Course Choice";
    Layout = "~/Views/Shared/ApplicationLayout.cshtml";
}
<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h2>Program/Course Option</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            @foreach (var item in Model.ApplicantsProgramCourses)
            {

                var applicantsProgramCourse = item;
                <div class="col-md-6">
                    @if (counter == 1)
                    {
                        <h4>First Choice</h4>
                        <hr />
                    }
                    @if (counter == 2)
                    {
                        <h4>Second Choice</h4>
                        <hr />
                    }
                    @if (counter == 3)
                    {
                        <h4>Third Choice</h4>
                        <hr />
                    }
                    @if (counter == 4)
                    {
                        <h4>Fourth Choice</h4>
                        <hr />
                    }

                    <div class="form-group">
                        <label class="col-md-2">Program:</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => applicantsProgramCourse.ProgramId, new SelectList(applicantsProgramCourse.Programs, "Id", "Code", applicantsProgramCourse.ProgramId), "<--Select-->", new { @class = "form-control", Name = "ProgramId", id = "programId" + counter })
                            @Html.ValidationMessageFor(model => applicantsProgramCourse.ProgramId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2">Department:</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => applicantsProgramCourse.DepartmentId, new SelectList(applicantsProgramCourse.Departments, "Id", "Name", applicantsProgramCourse.DepartmentId), "<--Select-->", new { @class = "form-control", Name = "DepartmentId", id = "departmentId" + counter })
                            @Html.ValidationMessageFor(model => applicantsProgramCourse.DepartmentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2">Course:</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => applicantsProgramCourse.CourseId, new SelectList(applicantsProgramCourse.Courses, "Id", "Name", applicantsProgramCourse.CourseId), "<--Select-->", new { @class = "form-control", Name = "CourseId", id = "courseId" + counter })
                            @Html.ValidationMessageFor(model => applicantsProgramCourse.CourseId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                    counter++;
            }
            <hr />
            <div class="row"></div>
            <div class="form-group">
                <div class="col-md-6">
                    <div class="col-md-offset-2 col-md-10">
                        @{
            var applicationFormId = Convert.ToInt32(Session["AppFormId"]);
            var appFormservice = EngineContext.Resolve<IApplicationFormRepository>();
            var applicationFormWorkFlow = appFormservice.GetFirstApplicationFormWorkFlow(applicationFormId);
            var workFlow = appFormservice.GetWorkFlowItem(applicationFormWorkFlow.WorkFlowId);
            var templatesForAppForm = appFormservice.GetFirstTemplatesInApp(applicationFormId);
            var formTemplate = appFormservice.GetFormTemplate(templatesForAppForm.FormTemplateId);
                        }
                        @if (!(workFlow.Name.Equals("Fill") && formTemplate.Code.Equals("PC")))
                        {
                            @Html.ActionLink("<< Back", "BackApplication", "Fill", null, new { @class = "btn btn-default" })
                        }
                        <input type="submit" value="Save" id="SaveProgCourse" class="btn btn-success" />
                        @Html.ActionLink("Continue >>", "ContinueFromProgCourse", "ApplicantsProgramCourse", null, new { @class = "btn btn-success" })
                    </div>
                </div>

            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(function () {
        $("#SaveProgCourse").click(function () {
            var isValid = true;
            var deptIdz = [];
            if ($("#departmentId1").val() != null) {
                deptIdz.push($("#departmentId1").val());
            }
            if ($("#departmentId2").val() != null) {
                deptIdz.push($("#departmentId2").val());
            }
            if ($("#departmentId3").val() != null) {
                deptIdz.push($("#departmentId3").val());
            }
            $.ajax({
                cache: false,
                type: "GET",
                async: false,
                traditional: true,
                url: "/ApplicantsProgramCourse/ValidateDeptSelection",
                data: { "deptIdz": deptIdz },
                success: function (response) {
                    isValid = response;
                },
                error: function () {
                    alert('An unknown error occured, please log out and try again');
                }
            });
            if (!isValid) {
                toastr.error("You cannot select courses from different Departments");
                return false;
            }
        });

        $("#programId1").change(function () {
            var selectedItem = $(this).val();
            var ddlDepartments = $("#departmentId1");
            // var ddlCourses = $("#courseId1");
            // var statesProgress = $("#states-loading-progress");
            //statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "/ApplicantsProgramCourse/GetDepartmentByProgramId",
                // url: "/ApplicationForm/GetCoursesByProgramId",
                data: { "programId": selectedItem },
                success: function (data) {
                    ddlDepartments.html('');
                    ddlDepartments.append($('<option></option>').val(null).html("----"));
                    //ddlCourses.html('');
                    // ddlCourses.append($('<option></option>').val(null).html("----"));
                    $.each(data, function (id, option) {
                        ddlDepartments.append($('<option></option>').val(option.id).html(option.name));
                        //ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                    // statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve courses.');
                    alert('Failed to retrieve Departments.');
                    //   statesProgress.hide();
                }
            });
        });

        $("#departmentId1").change(function () {
            var selectedItem = $(this).val();
            var ddlCourses = $("#courseId1");
            $.ajax({
                cache: false,
                type: "GET",
                url: "/ApplicantsProgramCourse/GetCourseByDeptId",
                // url: "/ApplicationForm/GetCoursesByProgramId",
                data: { "deptId": selectedItem },
                success: function (data) {
                    ddlCourses.html('');
                    ddlCourses.append($('<option></option>').val(null).html("----"));
                    $.each(data, function (id, option) {
                        ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve courses.');
                    alert('Failed to retrieve Courses.');
                    //   statesProgress.hide();
                }
            });
        });

        //second dropdown if any
        $("#programId2").change(function () {
            var selectedItem = $(this).val();
            var ddlDepartments = $("#departmentId2");
            // var ddlCourses = $("#courseId2");
            $.ajax({
                cache: false,
                type: "GET",
                url: "/ApplicantsProgramCourse/GetDepartmentByProgramId",
                // url: "/ApplicationForm/GetCoursesByProgramId",
                data: { "programId": selectedItem },
                success: function (data) {
                    ddlDepartments.html('');
                    ddlDepartments.append($('<option></option>').val(null).html("----"));
                    //ddlCourses.html('');
                    // ddlCourses.append($('<option></option>').val(null).html("----"));
                    $.each(data, function (id, option) {
                        ddlDepartments.append($('<option></option>').val(option.id).html(option.name));
                        //ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve courses.');
                    alert('Failed to retrieve Departments.');
                    //   statesProgress.hide();
                }
            });
        });

        $("#departmentId2").change(function () {
            var selectedItem = $(this).val();
            var ddlCourses = $("#courseId2");
            $.ajax({
                cache: false,
                type: "GET",
                url: "/ApplicantsProgramCourse/GetCourseByDeptId",
                // url: "/ApplicationForm/GetCoursesByProgramId",
                data: { "deptId": selectedItem },
                success: function (data) {
                    ddlCourses.html('');
                    ddlCourses.append($('<option></option>').val(null).html("----"));
                    $.each(data, function (id, option) {
                        ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve courses.');
                    alert('Failed to retrieve Courses.');
                    //   statesProgress.hide();
                }
            });
        });
        //third dropdown if any
        $("#programId3").change(function () {
            var selectedItem = $(this).val();
            var ddlDepartments = $("#departmentId3");
            //var ddlCourses = $("#courseId1");
            $.ajax({
                cache: false,
                type: "GET",
                url: "/ApplicantsProgramCourse/GetDepartmentByProgramId",
                // url: "/ApplicationForm/GetCoursesByProgramId",
                data: { "programId": selectedItem },
                success: function (data) {
                    ddlDepartments.html('');
                    ddlDepartments.append($('<option></option>').val(null).html("----"));
                    //ddlCourses.html('');
                    // ddlCourses.append($('<option></option>').val(null).html("----"));
                    $.each(data, function (id, option) {
                        ddlDepartments.append($('<option></option>').val(option.id).html(option.name));
                        //ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve courses.');
                    alert('Failed to retrieve Departments.');
                    //   statesProgress.hide();
                }
            });
        });

        $("#departmentId3").change(function () {
            var selectedItem = $(this).val();
            var ddlCourses = $("#courseId3");
            $.ajax({
                cache: false,
                type: "GET",
                url: "/ApplicantsProgramCourse/GetCourseByDeptId",
                // url: "/ApplicationForm/GetCoursesByProgramId",
                data: { "deptId": selectedItem },
                success: function (data) {
                    ddlCourses.html('');
                    ddlCourses.append($('<option></option>').val(null).html("----"));
                    $.each(data, function (id, option) {
                        ddlCourses.append($('<option></option>').val(option.id).html(option.name));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve courses.');
                    alert('Failed to retrieve Courses.');
                    //   statesProgress.hide();
                }
            });
        });
    });
</script>



<script type="text/javascript">
    $(function () {

        toastr.options =
        {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
    })
</script>

@if (TempData["AppCourseSaved"] != null && TempData["AppCourseSaved"].ToString() == "Success")
{
    <script type="text/javascript">
        $(function () {
            toastr.success("Program Course successfully Saved");
        })
    </script>
}
