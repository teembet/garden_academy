@model EduApply.Web.Models.JambBreakDownModel

@{
    ViewBag.Title = "EditJambBreakdown";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    var gender = new List<SelectListItem>
    {
       new SelectListItem(){Text = "F", Value = "F"},
       new SelectListItem(){Text = "M", Value = "M"}
    };
}

<h2>Edit JambBreakdown</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.SessionId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SessionId, new SelectList(Model.Sessions, "Id", "Name", Model.SessionId), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegNum, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegNum, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.RegNum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName)
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Faculty, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Faculty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Faculty)
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.CourseCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseCode, new SelectList(Model.Courses, "Code", "Code", Model.CourseCode), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseOfStudy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseOfStudy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseOfStudy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, gender, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateOfOrigin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StateOfOrigin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StateOfOrigin)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LGA, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LGA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LGA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngScore, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EngScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EngScore)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject2, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject2Score, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject2Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject2Score)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject3, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject3)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject3Score, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject3Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject3Score)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject4, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject4)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject4Score, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject4Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject4Score)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("cancel", "JambBreakDownUpload", new { sessionId = Model.SessionId }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
