@model EduApply.Web.Models.SessionResultModel

@{
    ViewBag.Title = "Session Result Upload";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    int successfulUploads = TempData["successfulUploads"] == null ? 0 : Convert.ToInt32(TempData["successfulUploads"]);
    int updatedUploads = TempData["updatedUploads"] == null ? 0 : Convert.ToInt32(TempData["updatedUploads"]);
    int failedUploads = TempData["failedUploads"] == null ? 0 : Convert.ToInt32(TempData["failedUploads"]);
    var uploadFormats = new List<SelectListItem>()
                            {
                                new SelectListItem{Text = "<--Select Format-->",Value = null},
                                new SelectListItem{Text = "Format1",Value = "1"},
                                new SelectListItem{Text = "Format2", Value = "2"}
                            };
}

@*<h2>Session Result Upload</h2>*@

@using (Html.BeginForm("SessionResultUpload", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4 style="color: red">Note: Only csv files are accepted for upload, click @Html.ActionLink("Format1", "DownloadPreFormatedDoc", "Upload", new { fileName = "SessionResultFormat.csv" }, null) or @Html.ActionLink("Format2", "DownloadPreFormatedDoc", "Upload", new { fileName = "SessionResultFormat2.csv" }, null) to get a preformatted document</h4>
    <hr />
    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.SessionId)
            @Html.DropDownListFor(model => model.SessionId, new SelectList(Model.Sessions, "Id", "Name", Model.SessionId), "<--Select-->", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SessionId)
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group required">
            <label class="control-label">Select File</label>
            <input type="file" id="formResultUpload" name="sessionResultUpload" value="" class="form-control" data-val="true" data-val-required="No file selected" />
            @Html.ValidationMessage("sessionResultUpload", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group required">
            <label class="control-label">Upload Format</label>
            @Html.DropDownList("uploadFormat", uploadFormats, new { @class = "form-control", @data_val = "true", @data_val_number = "Select File Format", @data_val_required = "Enter a name for the file you are uploading" })
            @*<input class="form-control" type="text" id="NameOfFile" name="nameOfFile" data-val="true" data-val-required="Enter a name for the file you are uploading" />*@
            @Html.ValidationMessage("uploadFormat", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.NameOfFile, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameOfFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameOfFile)
            </div>
        </div>*@

    <div class="col-md-12">
        <div class="form-group">
            <input type="submit" id="UploadList" value="Upload CSV" class="btn btn-primary" />
            @*@Html.ActionLink("Download", "Download", "Upload", new { id = "downloadButton" }, new { @class = "btn btn-success" })*@
            @*<button id="downloadButton" class="btn btn-success">Download</button>*@
            <a href="#" id="downloadButton" class="btn btn-success">Download</a>
            @*@Html.ActionLink("Download", "#", null, new {@id = "downloadButton", @class = "btn btn-success" })*@
        </div>
    </div>

    if (successfulUploads > 0 && failedUploads == 0 && updatedUploads == 0)
    {
        <div class="col-md-12">
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <p>All records in file successfully uploaded</p>
            </div>
        </div>

    }
    else if (updatedUploads > 0 && successfulUploads == 0 && failedUploads == 0)
    {
        <div class="col-md-12">
            <div class="alert alert-info alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <p>@updatedUploads records succesfully updated</p>
            </div>
        </div>

    }
    else if (failedUploads > 0 && successfulUploads == 0 && updatedUploads == 0)
    {
        <div class="col-md-12">
            <div class="alert alert-danger alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <p>No record uploaded</p>
            </div>
        </div>

    }
    else if (failedUploads != 0 || successfulUploads != 0 || updatedUploads != 0)
    {
        <div class="col-md-12">
            <div class="alert alert-info alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <p>New records added: @successfulUploads, Updated Records:@updatedUploads, Failed : @failedUploads</p>
            </div>
        </div>

    }
    <div class="col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger alert alert-danger alert-dismissible" })
    </div>

    <div class="form-group">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">Uploaded Result List</div>
                <div id="sessionResult"></div>
            </div>
        </div>
    </div>
}


<script>
    $(function () {

        toastr.options =
        {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        var sessionId = $("#SessionId").val();
        getSessionResult(sessionId);

        $("#SessionId").change(function () {
            sessionId = $("#SessionId").val();
            getSessionResult(sessionId);
        });

        $("#downloadButton").click(function () {
            var regNums = [];
            $("#sessionResultTable tr:gt(0)").each(function () {
                var row = $(this);
                var registrationNumber = $.trim(row.find('td:eq(1)').html());
                if (registrationNumber != "") {
                    regNums.push(registrationNumber);
                }

            });
            if (regNums.length == 0) {
                toastr.info("No record to download");
                return false;
            }
            downloadResult(regNums);
        });

        //$("#UploadList").click(function () {
        //    var uploadFormat = $("#uploadFormat").val();
        //    if (uploadFormat == '<--Select Format-->') {
        //        toastr.error("Select Upload Format");
        //        return false;
        //    }
        //});
        //$("#UploadList").click(function () {
        //    var response;
        //    var nameOfFile = $("#NameOfFile").val();
        //    checkIfNameExist();
        //    if (response) {
        //        toastr.error("Name entered for uploaded file already exist, Please enter another name");
        //        return false;
        //    }

        //    function checkIfNameExist() {
        //        $.ajax({
        //            cache: false,
        //            type: "GET",
        //            async: false,
        //            url: "/Upload/CheckForDuplicateName",
        //            //url: "/EduApply/Upload/CheckForDuplicateName",
        //            data: { "nameOfFile": nameOfFile },
        //            success: function (data) {
        //                response = data;
        //            },
        //            error: function (xhr, ajaxOptions, thrownError) {
        //                alert('Error occured');
        //                return false;
        //            }
        //        });
        //    }
        //});

    });

    function getSessionResult(sessionId) {
        $.ajax({
            cache: false,
            type: "GET",
           // url: "/Upload/GetResultForSession",
            url: "/EduApply/Upload/GetResultForSession",
            data: { "sessionId": sessionId },
            success: function (data) {
                $("#sessionResult").html('<table id="sessionResultTable" class="table table-striped"><thead><tr><th>S/N</th><th>RegNum</th><th>Eng Score</th><th>Subjct2</th><th>Subject2 Score</th><th>Subject3</th><th>Subject3 Score</th><th>Subject4</th><th>Subject4 Score</th><th>Total Score</th><th></th><th></th></tr></thead><tbody id="sessionResultTableBody"></tbody></table>');
                var sessionResultTableBody = $("#sessionResultTableBody");
                var counter = 0;

                if (data.length > 0) {
                    sessionResultTableBody.html('');
                    $.each(data, function (id, option) {
                        counter++;
                        sessionResultTableBody.append($('<tr id=' + counter + '></tr>').html(
                            '<td>' + counter + '</td>' +
                            '<td>' + option.regNum + '</td>' +
                            '<td>' + option.engScore + '</td>' +
                            '<td>' + option.subject2 + '</td>' +
                            '<td>' + option.subject2Score + '</td>' +
                            '<td>' + option.subject3 + '</td>' +
                            '<td>' + option.subject3Score + '</td>' +
                            '<td>' + option.subject4 + '</td>' +
                            '<td>' + option.subject4Score + '</td>' +
                            '<td>' + option.totalScore + '</td>' +
                            '<td> <a href="#" onclick = "return editSessionResult(' + option.id + ');" class="btn btn-primary btn-xs Delete">Edit</a></td>' +
                            '<td> <a href="#" onclick = "return deleteSessionResult(' + option.id + ');" class="btn btn-danger btn-xs Delete">Delete</a></td>'
                        ));
                    });
                    var table2;
                    if ($.fn.dataTable.isDataTable('#sessionResultTable')) {
                        table2 = $('#sessionResultTable').DataTable({
                            destroy: true
                        });
                    }
                    else {
                        table2 = $('#sessionResultTable').DataTable();
                    }
                }
                else {
                    sessionResultTableBody.html('<tr><td colspan="12" style="text-align: center">No records found</td></tr>');
                }



                // statesProgress.hide();
            },

            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve Session Result.');
                //   statesProgress.hide();
            }
        });

    }
    function editSessionResult(id) {
       // window.location = '/Upload/EditSessionResult?id=' + id;
        window.location = '/EduApply/Upload/EditSessionResult?id=' + id;

    }

    function deleteSessionResult(id) {
        var res = confirm("Are you sure you want to delete this Result?");
        if (res) {
            $.ajax({
                cache: false,
                type: "POST",
               // url: "/Upload/DeleteSessionResult",
                url: "/EduApply/Upload/DeleteSessionResult",
                data: { "id": id },
                success: function () {
                    var sessionId = $("#SessionId").val();
                    getSessionResult(sessionId);
                }
            });
        }

    }

    function downloadResult(regNums) {

        $.ajax({
            cache: false,
            type: "POST",
            //before passing an array to a controller from ajax traditional must be set to true or else controller wont recieve the array
            traditional: true,
           // url: "/Download/CreateExcelForSessionResult",
            url: "/EduApply/Download/CreateExcelForSessionResult",
            data: { "regNums": regNums },
            success: function (filename) {
                window.location = '/EduApply/Download/DownloadExcel?file=' + filename;
               // window.location = '/Download/DownloadExcel?file=' + filename;
                //  toastr.success("Download Complete");
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Error occured');
                return false;
            }
        });
    }
</script>

@if (TempData["Edited"] != null && Convert.ToBoolean(TempData["Edited"]))
{
    <script>
        $(function () {
            toastr.success("Session Result Updated");
        });

    </script>
}
