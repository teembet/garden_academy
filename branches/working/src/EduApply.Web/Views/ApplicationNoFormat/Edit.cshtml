@model EduApply.Data.Entities.ApplicationNoFormat

@{
    ViewBag.Title = "Create Application No Format";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs">
            <li>@Html.ActionLink("Session", "Index", "Session")</li>
            <li>@Html.ActionLink("Program", "Index", "Program")</li>
            <li>@Html.ActionLink("Faculty", "Index", "Faculty")</li>
            <li>@Html.ActionLink("Department", "Index", "Department")</li>
            <li>@Html.ActionLink("Course of Study", "Index", "Course")</li>
            <li>@Html.ActionLink("Exam Venue", "Index", "Venue")</li>
            <li>@Html.ActionLink("Venue Date", "Index", "ExamVenue")</li>
            <li>@Html.ActionLink("Venue Mapping", "Mapper", "VenueMapping")</li>
            <li>@Html.ActionLink("Split", "Index", "SplitConfiguration")</li>
            <li class="active">@Html.ActionLink("ApplicationNo Format", "Index", "ApplicationNoFormat")</li>
        </ul>
    </div>
    <div class="col-md-12 margin-top">
   @using (Html.BeginForm("Edit", "ApplicationNoFormat", FormMethod.Post))
{
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger alert alert-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.ApplicationFormId)

                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationForm.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApplicationForm.Name, new { htmlAttributes = new { @class = "form-control default-width", @ReadOnly = true } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prefix, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Prefix, new { htmlAttributes = new { @class = "form-control default-width" } })
                        @Html.ValidationMessageFor(model => model.Prefix)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Suffix, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Suffix, new { htmlAttributes = new { @class = "form-control default-width" } })
                        @Html.ValidationMessageFor(model => model.Suffix)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartNumber, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartNumber, new { htmlAttributes = new { @class = "form-control default-width" } })
                        @Html.ValidationMessageFor(model => model.StartNumber)
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.LastNumberAllocated, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastNumberAllocated)
                            @Html.ValidationMessageFor(model => model.LastNumberAllocated)
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Range, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Range, new { htmlAttributes = new { @class = "form-control default-width" } })
                        @Html.ValidationMessageFor(model => model.Range)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script type="text/javascript">
    $(function () {
        toastr.options =
        {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
    })
</script>
@if (TempData["FormatSaved"] != null && TempData["FormatSaved"].ToString() == "Failed")
{
    <script type="text/javascript">
        $(function () {
            toastr.error("Application No Format Configuration Failed");
        })
    </script>
}


