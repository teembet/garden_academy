@model EduApply.Web.Models.SplitConfigModel

@{
    ViewBag.Title = "Split Configuration";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@using (Html.BeginForm("Index", "SplitConfiguration", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs">
                <li>@Html.ActionLink("Session", "Index", "Session")</li>
                <li>@Html.ActionLink("Program", "Index", "Program")</li>
                <li>@Html.ActionLink("Faculty", "Index", "Faculty")</li>
                <li>@Html.ActionLink("Department", "Index", "Department")</li>
                <li>@Html.ActionLink("Course of Study", "Index", "Course")</li>
                <li>@Html.ActionLink("Exam Venue", "Index", "Venue")</li>
                <li>@Html.ActionLink("Venue Date", "Index", "ExamVenue")</li>
                <li>@Html.ActionLink("Venue Mapping", "Mapper", "VenueMapping")</li>
                <li class="active">@Html.ActionLink("Split", "Index", "SplitConfiguration")</li>
                <li>@Html.ActionLink("ApplicationNo Format", "Index", "ApplicationNoFormat")</li>
            </ul>

        </div>

        <div class="col-md-12 margin-top">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApplicationFormId, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.ApplicationFormId, new SelectList(Model.ApplicationForms, "Id", "Name", Model.ApplicationFormId), "<--Select-->", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ApplicationFormId)
                            </div>
                        </div>
                        <div class="thumbnail" id="formDetails">
                            <h3 style="border-bottom: 1px solid #eee">Form Details</h3>
                            <div id="formDetailsContainer"></div>
                        </div>

                    </div>
                    <div class="col-md-6">

                        <fieldset class="scheduler-border">
                            <legend>Add Split</legend>

                            <div class="form-group required">
                                <label class="col-md-3">Name</label>
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control default-width" })
                                </div>
                            </div>

                            <div class="form-group required">
                                <label class="col-md-3">Bank</label>
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.BankId, new SelectList(Model.Banks, "Id", "Name"), "<--Select-->", new { @class = "form-control default-width" })
                                </div>
                            </div>

                            <div class="form-group required">
                                <label class="col-md-3">Account Number</label>
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.AccountNumber, new { @class = "form-control default-width" })
                                </div>
                            </div>

                            <div class="form-group required">
                                <label class="col-md-3">Amount</label>
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Amount, new { @class = "form-control default-width" })
                                </div>
                            </div>

                            <div class="form-group required">
                                <label class="col-md-3">Narration</label>
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Narration, new { @class = "form-control default-width" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <a href="#" onclick="return loadSplit()" class="btn btn-primary">Load Split</a>
                                    <input type="submit" value="Submit" class="btn btn-success" />
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>

            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-primary">
            <div class="panel-heading">Split Items</div>
            <table id="splitTable" class="table table-striped">
                <thead>
                    <tr>
                        <th>S/N</th>
                        <th>Name</th>
                        <th>Bank</th>
                        <th>Account Number</th>
                        <th>Amount</th>
                        <th>Narration</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Splits.Any())
                    {
                        var counter = 1;
                        foreach (var item in Model.Splits)
                        {
                            var split = item;
                            <tr id="@item.Id-read">
                                <td>@counter</td>
                                <td>@item.Name</td>
                                <td>@item.Bank.Name</td>
                                <td>@item.AccountNumber</td>
                                <td>@item.Amount</td>
                                <td>@item.Narration</td>
                                <td><a href="#" onclick="return editSplitConfiguration(@item.Id);" class="btn btn-primary btn-xs">Edit</a></td>
                                <td>@Html.ActionLink("Delete", "Delete", "SplitConfiguration", new { splitId = @item.Id }, new { @class = "btn btn-xs btn-danger Delete" })</td>
                            </tr>
                            using (Html.BeginForm("Update", "SplitConfiguration"))
                            {
                                <tr id="@item.Id-edit" style="display: none">
                                    <td>@counter</td>
                                    <td>
                                        @Html.HiddenFor(x => @split.Id)
                                        @Html.HiddenFor(x => @split.ApplicationFormId)
                                        @Html.TextBoxFor(x => @split.Name, new { @class = "form-control" })
                                    </td>
                                    <td>@Html.DropDownListFor(x => @split.BankId, new SelectList(Model.Banks, "Id", "Name", @split.BankId), new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(x => @split.AccountNumber, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(x => @split.Amount, new { @class = "form-control" })</td>
                                    <td>@Html.TextBoxFor(x => @split.Narration, new { @class = "form-control" })</td>
                                    <td><input type="submit" value="update" class="btn btn-xs btn-primary" /></td>
                                    <td><a href="#" onclick="return cancelEdit(@item.Id);" class="btn btn-default btn-xs">Cancel</a></td>
                                </tr>
                            }

                            counter++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" style="text-align: center">No Record Available</td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>



<script>
    $(function () {
        var appFormIdOnPageLoad = $("#ApplicationFormId").val();
        getFormDetails(appFormIdOnPageLoad);

        $("#ApplicationFormId").change(function () {
            var appFormId = $(this).val();
            getFormDetails(appFormId);
        });

        $(".Delete").click(function () {
            return confirm("Are you sure you want to delete this Split Item");
        });

        toastr.options =
        {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };


    });

    function loadSplit() {
        var applicationFormId = $("#ApplicationFormId").val();
        if (applicationFormId == "") {
            toastr.error("Select ApplicationForm");
            return false;
        }
        window.location = '/SplitConfiguration/LoadSplit?applicationFormId=' + applicationFormId;
    }

    function getFormDetails(appFormId) {
        $.ajax({
            cache: false,
            type: "GET",
            url: "/SplitConfiguration/GetFormDetails",
            data: { "applicationFormId": appFormId },
            success: function (data) {
                $("#formDetailsContainer").html('<table id="formDetailsTable" class="table table-striped"><tr><th>Form Fee</th><td>' + data.Fee + '</td></tr><tr><th>Start Date</th><td>' + data.StartDate + '</td></tr><tr><th>End Date</th><td>' + data.EndDate + '</td></tr></table>');
            },

            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve Split Items.');
            }
        });

    }

    function editSplitConfiguration(id) {
        $("#" + id + '-read').hide();
        $("#" + id + '-edit').show();
    }
    function cancelEdit(id) {
        $("#" + id + '-edit').hide();
        $("#" + id + '-read').show();
    }

</script>
@if (TempData["Deleted"] != null && TempData["Deleted"].ToString() == "Success")
{
    <script type="text/javascript">
        $(function () {
            toastr.success("Split Item Successfully Deleted");
        })
    </script>
}
@if (TempData["SplitAdded"] != null && TempData["SplitAdded"].ToString() == "Success")
{
    <script type="text/javascript">
        $(function () {
            toastr.success("Split Item Successfully Added");
        })
    </script>
}
@if (TempData["Updated"] != null && TempData["Updated"].ToString() == "Success")
{
    <script type="text/javascript">
        $(function () {
            toastr.success("Split Item Successfully Updated");
        })
    </script>
}

@if (TempData["AmountExceeded"] != null && TempData["AmountExceeded"].ToString() == "exceeded")
{
    <script type="text/javascript">
        $(function () {
            toastr.error("Split not added, Total Split amount will be greater than Form Fee");
        })
    </script>
}

@if (TempData["UpdateAmountExceeded"] != null && TempData["UpdateAmountExceeded"].ToString() == "exceeded")
{
    <script type="text/javascript">
        $(function () {
            toastr.error("Split not updated, Total Split amount will be greater than Form Fee");
        })
    </script>
}

@if (TempData["NameExist"] != null && TempData["NameExist"].ToString() == "exists")
{
    <script type="text/javascript">
        $(function () {
            toastr.error("Split not added, Name in use by another split in this Form");
        })
    </script>
}

@if (TempData["UpdateNameExist"] != null && TempData["UpdateNameExist"].ToString() == "exists")
{
    <script type="text/javascript">
        $(function () {
            toastr.error("Split not updated, Name in use by another split in this Form");
        })
    </script>
}
